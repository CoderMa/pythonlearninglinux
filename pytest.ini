[pytest]
markers =
    httptest: run http interface test
    dubbotest: run dubbo interface test
    performance: marks tests as performance tests (deselect with '-m "not performance"')
    notrunning: marks tests not running
    web: marks web tests
    last_in_group: last test in group of tests that use expensive_operation fixture

#markers用法
#pytest -m performance
#pytest -m "not performance"



# addopts = -p no:warnings -vs --html=./testoutput/report.html    # 空格分隔，可添加多个命令行参数 -所有参数均为插件包的参数配置测试搜索的路径
addopts = -p no:warnings -vs
testpaths = ./testcases   # 当前目录下的testcases文件夹 -可自定义
python_files = test_*.py  # 当前目录下的testcases文件夹下，以test_开头，以.py结尾的所有文件 -可自定义
python_classes = Test*    # 当前目录下的testcases文件夹下，以test_开头，以.py结尾的所有文件中，以Test开头的类 -可自定义
python_functions = test_*  # 当前目录下的testcases文件夹下，以test_开头，以.py结尾的所有文件中，以Test开头的类内，以test_开头的方法 -可自定义

log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s - %(pathname)s[line:%(lineno)d] - %(levelname)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S
log_format = %(asctime)s - %(pathname)s[line:%(lineno)d] - %(levelname)4s: %(message)s
log_date_format = %Y-%m-%d %H:%M:%S


# [pytest]	用于标志这个文件是pytest的配置文件
# addopts	命令行参数，多个参数之间用空格分隔
# testpaths	配置搜索参数用例的范围
# python_files	改变默认的文件搜索规则
# python_classes	改变默认的类搜索规则
# python_functions	改变默认的测试用例的搜索规则
# markers	用例标记，自定义mark，需要先注册标记，运行时才不会出现warnings

# 不管是mian执行方式还是命令执行，最终都会去读取pytest.ini文件
# pytest的配置文件通常放在测试目录下，名称为pytest.ini
# pytset.ini文件尽可能不要出现中文。